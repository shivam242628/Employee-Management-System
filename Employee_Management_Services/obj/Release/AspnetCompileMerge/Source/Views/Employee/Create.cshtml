@model Employee_Management_Services.Models.Employee

@{
    ViewBag.Title = "Create";
}
<head>
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Create_Employee.css" rel="stylesheet" type="text/css" />

    <script src="~/Scripts/Create_Employee.js"></script>
    
    
</head>





<div class="navbar navbar-inverse navbar-fixed-top" style="background-color:#2980b9">
    <div class="container" style="color:white;">
        <div class="navbar-header" style="color:white">

            @Html.ActionLink("Employee Management System", "Index", "Employee", new { area = "", id = Session["UserID"] }, new { @class = "navbar-brand", @style = "color:white;" })
        </div>
    </div>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Add New Employee</h2>
        <hr />
   
        

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.Label("FULL NAME", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DOB", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("GENDER", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="gender" class="dropdown1 form-control">
                    <option value="MALE">MALE</option>
                    <option value="FEMALE">FEMALE</option>
                </select>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("JOINING DATE", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Joining_Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Joining_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DEPARTMENT", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="department" class="dropdown1 form-control">
                    <option value="TECHNICAL">TECHNICAL</option>
                    <option value="MARKETING">MARKETING</option>
                    <option value="SALES">SALES</option>
                    <option value="SUPPORT">SUPPORT</option>
                </select>

                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("EMAIL ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("CONTACT NUMBER", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("PASSWORD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("CONFIRM PASSWORD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info submitbtn"  />
            </div>
        </div>
    </div>
}


<div>
    <button class="submitbtn btn btn-info back"> @Html.ActionLink("Back to Login Page", "Home/Login")</button>
</div>
